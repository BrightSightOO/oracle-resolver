/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import type { ClusterFilter, Context, Program, PublicKey } from "@metaplex-foundation/umi";

import { getOracleResolverErrorFromCode, getOracleResolverErrorFromName } from "../errors";

export const ORACLE_RESOLVER_PROGRAM_ID =
  "RESwds5X9Yj1kzXkjuA5ncR8TqhHeqj7qcrUz9QM29f" as PublicKey<"RESwds5X9Yj1kzXkjuA5ncR8TqhHeqj7qcrUz9QM29f">;

export function createOracleResolverProgram(): Program {
  return {
    name: "oracleResolver",
    publicKey: ORACLE_RESOLVER_PROGRAM_ID,
    getErrorFromCode(code: number, cause?: Error) {
      return getOracleResolverErrorFromCode(code, this, cause);
    },
    getErrorFromName(name: string, cause?: Error) {
      return getOracleResolverErrorFromName(name, this, cause);
    },
    isOnCluster() {
      return true;
    },
  };
}

export function getOracleResolverProgram<T extends Program = Program>(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): T {
  return context.programs.get<T>("oracleResolver", clusterFilter);
}

export function getOracleResolverProgramId(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): PublicKey {
  return context.programs.getPublicKey("oracleResolver", ORACLE_RESOLVER_PROGRAM_ID, clusterFilter);
}
